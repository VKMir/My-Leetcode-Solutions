class Solution {
public:
    void find_comb(int index, int target, vector<int>& set, vector<vector<int>>& ans, vector<int>& candidates){
        if(index==candidates.size()){
             if(target==0)
            ans.push_back(set);
            return;
        }
        if(candidates[index]<=target){
            set.push_back(candidates[index]);
            find_comb(index,target-candidates[index],set,ans,candidates);
            set.pop_back();
        }
        find_comb(index+1,target,set,ans,candidates);
    } 
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<int>set;
        vector<vector<int>> ans;
        find_comb(0,target,set,ans,candidates);
        return ans;
    }
};


Time Complexity: O(2^target)
Space Complexity: O(target)
