class Solution {
public:
void findComb(vector<int>& candidates, int n, int target, int index, vector<int>& set, vector<vector<int>>& ans){
    if(target == 0){
        ans.push_back(set);
        return;
    }
    for(int i = index; i < n; i++){
        if(i != index){
            if(candidates[i] == candidates[i - 1]) continue;
        }
        if(candidates[i] <= target){
            set.push_back(candidates[i]);
            findComb(candidates, n, target - candidates[i], i + 1, set, ans);
            set.pop_back();
        }else{
            break;
        }
    }
}
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        int n = candidates.size();
        sort(candidates.begin(), candidates.end());
        vector<int> set;
        vector<vector<int>> ans;
        findComb(candidates, n, target, 0, set, ans);
        return ans;
    }
};
