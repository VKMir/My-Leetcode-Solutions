class Solution {
public:
    int romanToInt(string s) {
        int len = s.length();
        int number = 0;
         unordered_map<char, int> mmap = {
            {'I',1}, {'V',5}, {'X',10}, {'L',50},
            {'C',100}, {'D',500}, {'M',1000}
        };
        for(int i = 0; i < len; i ++){
            int curr_el = mmap[s[i]];
            int next_el = (i < len - 1) ? mmap[s[i+1]] : 0;
            if(curr_el < next_el){
                number -= curr_el;
            }else{
                number += curr_el;
            }
        }
        return number;
    }
};


Time Complexity: O(n)
Space Complexity: O(1)
