class Solution {
public:
    string reverseWords(string s) {
        int len = s.length();
        string ans = "";
        int i, j;
        i = j = len -1;

        // handle trailing spaces
        while(s[i] == ' '){
            --i;
            --j;
        }

        // add words when reaching pointer just before start of word and skip extra spaces
        while(i >= 0){
            if(s[i] == ' ' && s[i + 1] != ' '){
                if(ans != "") ans += ' ';
                ans += s.substr(i + 1, j - i);
                while(i >= 0 && s[i] == ' '){
                    --i;
                }
                j = i;
            }else{
                --i;
            }

        }

        // add the first word
        if(s[0] != ' '){
            if(ans != "") ans += ' ';
            ans += s.substr(0, j + 1);
        } 
        return ans;
    }
};


Time Complexity: O(n)
Space Complexity: O(1)
