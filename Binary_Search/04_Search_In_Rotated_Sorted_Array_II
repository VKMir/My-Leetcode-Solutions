class Solution {
public:
    bool search(vector<int>& nums, int target) {
         int n = nums.size();
        int beg = 0, end = n - 1;
        int ans = -1;
        while(beg <= end){
            int mid = (beg + end)/2;
            if(nums[mid] == target){
                ans = mid;
                break;
            }
            if (nums[beg] == nums[mid] && nums[mid] == nums[end]) {
                ++beg;
                --end;
                continue;
            }
            if(nums[beg] <= nums[mid]){
                if(target >= nums[beg] & target <= nums[mid]){
                    end = mid - 1;
                }else{
                    beg = mid + 1;
                }
            }else{
                if(target >= nums[mid] & target <= nums[end]){
                    beg = mid + 1;
                }else{
                    end = mid - 1;
                }
            }
        }
        return (ans == -1) ? false: true;
    }
};


Time Complexity: O(log n)
Space Complexity: O(1)
