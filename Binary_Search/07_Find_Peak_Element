class Solution {
public:
    int findPeakElement(vector<int>& nums) {
        int n = nums.size();
        int beg = 0, end = n - 1;
        int ans = -1;
        if(n == 1) return 0;
        if(nums[0] > nums[1]) return 0;
        if(nums[n - 1] > nums[n - 2]) return n - 1;
        while(beg <= end){
            int mid = (beg + end)/2;
            if(mid > 0 && mid < n - 1 && nums[mid] > nums[mid - 1] && nums[mid] > nums[mid + 1]){
                return mid;
            }else{
                if(nums[mid + 1] > nums[mid]){
                    beg = mid + 1;
                }else{
                    end = mid - 1;
                }
            }
        }
        return ans;
    }
};


Time Complexity: O(log n)
Space Complexity: O(1)
