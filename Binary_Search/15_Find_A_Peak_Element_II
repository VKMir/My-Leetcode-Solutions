class Solution {
public:
    int find_max_el(vector<vector<int>>& mat, int rows, int mid){
        int max_el = INT_MIN, max_index = -1;
        for(int i = 0; i < rows; i++){
            if(mat[i][mid] > max_el){
                max_el = mat[i][mid];
                max_index = i;
            }
        }
        return max_index;
    }
    vector<int> findPeakGrid(vector<vector<int>>& mat) {
        int rows = mat.size();
        int cols = mat[0].size();
        int beg = 0, end = cols - 1;
        while(beg <= end){
            int mid = (beg + end)/2;
            int row = find_max_el(mat, rows, mid);
            int l = (mid > 0) ? (mat[row][mid - 1]) : -1;
            int r = (mid < cols - 1) ? (mat[row][mid + 1]) : -1;
            if(mat[row][mid] > l && mat[row][mid] > r){
                return {row, mid};
            }else if(mat[row][mid] < l){
                end = mid - 1;
            }else if(mat[row][mid] < r){
                beg = mid + 1;
            }
        }
        return {-1, -1};
    }
};


Time Complexity: O(m log n)
Space Complexity: O(1)
