string findMinimumWindowSubsequence(string s1, string s2){
    int m = s1.length(), n = s2.length();
    int i = 0, j = 0;
    int start = -1, min_len = INT_MAX, end;
    while (i < m) {
        if (s1[i] == s2[j]) {
            ++j;
        }
        if (j == n) { 
            end = i;
            j = n - 1;
            while (j >= 0) {
                if (s1[i] == s2[j]) --j;
                --i;
            }
            ++i; 
            j = 0;
            if (end - i + 1 < min_len) {
                min_len = end - i + 1;
                start = i;
            }
        }
        ++i;
    }
    if (start == -1) return "";
    return s1.substr(start, min_len);
}


Time Complexity: O(n)
Space Complexity: O(1)
