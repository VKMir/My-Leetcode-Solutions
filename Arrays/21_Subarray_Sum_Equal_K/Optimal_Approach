class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int n = nums.size();
        unordered_map<int, int> mmap;
        int sum = 0;
        int count = 0;
        for(int i = 0; i < n; i++){
            sum += nums[i];
            if(sum == k){
                ++count;
            }
            int rem = sum - k;
            if(mmap.find(rem) != mmap.end()){
                count += mmap[rem];
            }
            ++mmap[sum];
        }
        return count;
    }
};


Time Complexity: O(n)
Space Cmplexity: O(n)
