class Solution {
public:
static bool sortByY(const vector<int>& a, const vector<int>& b){
        if(a[0] < b[0]) return true;
        if(a[0] == b[0]){
            if(a[1] > b[1]) return true;
        }
        return false;
    }
    int numberOfPairs(vector<vector<int>>& points) {
        int n = points.size();
        int count = 0;
        sort(points.begin(), points.end(), sortByY);
        for(int i = 0; i < n; i++){
            int top = points[i][1];
            int bottom = INT_MIN;
            for(int j = i + 1; j < n; j++){
                if(points[j][1] <= top && points[j][1] > bottom){
                    ++count;
                    bottom = points[j][1];
                }
            }
        }
        return count;
    }
};


Time Complexity: O(n^2)
Space Complexity: O(1)
