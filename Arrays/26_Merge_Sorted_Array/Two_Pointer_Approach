class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
         int i = m - 1, j = 0;
         while(i >= 0 && j < n){
             if(nums1[i] > nums2[j]){
                int temp = nums1[i];
                nums1[i] = nums2[j];
                nums2[j] = temp;
                --i;
                ++j;
             }else{
                break;
             }
         }
         sort(nums1.begin(), nums1.end() - n);
         sort(nums2.begin(), nums2.end());
         int index = 0;
         for(int i = m; i < m + n; i++){
            nums1[i] = nums2[index];
            ++index;
         }
    }
};


Time Complexity: O(min(m,n)) + O(m log m) + O(n log n) + O(n) = O(m log m + n log n)
Space Complexity: O(1)
